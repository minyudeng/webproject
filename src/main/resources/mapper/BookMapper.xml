<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webproject.mapper.BookMapper">
    <insert id="addBook">
        insert into book(bname,aid,intro,cover,status)
        values(#{bname}, #{aid}, #{intro}, #{cover}, #{status})
    </insert>
    <insert id="addBookToType">
        insert into book_type(bid, type_id)
        values(#{bid}, #{typeId})
    </insert>
    <insert id="addCollection">
        insert into collection(uid, bid)
        values (#{uid}, #{bid})
    </insert>
    <update id="updateRating">
        UPDATE book set rating = #{rating} WHERE bid = #{bid}
    </update>
    <update id="updateBook">
        update book
        set bname = #{bname},
            intro = #{intro}
        where bid = #{bid}
    </update>
    <delete id="delBookToType">
        delete from book_type where bid = #{bid}
    </delete>
    <delete id="delCollection">
        DELETE FROM collection WHERE bid = #{bid} AND uid = #{uid}
    </delete>

    <select id="getBooksByAid" resultType="com.webproject.entity.Book">
        select * from book where aid = #{aid}
    </select>
    <select id="getOneBookByName" resultType="com.webproject.entity.Book">
        select * from book where bname = #{bname}
    </select>
    <select id="getOneBookByBid" resultType="com.webproject.entity.Book">
        select * from book where bid = #{bid}
    </select>
    <select id="orderBooksByRate" resultType="com.webproject.entity.Book">
        SELECT bid, rating
        FROM book
        ORDER BY rating ${order}
        <if test='limit != null and limit > 0'>
            LIMIT #{limit}
        </if>
    </select>
    <select id="getBookTypeId" resultType="java.lang.Integer">
        select type_id from book_type where bid = #{bid}
    </select>
    <select id="getAllType" resultType="com.webproject.entity.Type">
        select * from type
    </select>
    <select id="getTypeByTypeId" resultType="com.webproject.entity.Type">
        select * from type where type_id = #{typeId}
    </select>
    <select id="getBookCollectionNum" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM collection WHERE bid = #{bid}
    </select>
    <select id="getBidByUid" resultType="java.lang.Integer">
        select bid from collection where uid = #{uid}
    </select>

    <select id="getCollectionNumOrder" resultType="java.lang.Integer">
        SELECT bid, COUNT(bid) AS bidCount
        FROM collection
        GROUP BY bid
        ORDER BY bidCount DESC
    </select>
    <select id="getBooks" resultType="java.lang.Integer">
        select bid from book
        <where>
            <if test=" bname != null and bname != '' ">
                AND bname LIKE CONCAT('%', #{bname}, '%')
            </if>
        </where>
    </select>

</mapper>

